Program projeto_final;

var path: integer;
		key: char;
		xplayer,yplayer,xmovspeed,ymovspeed: integer;
		sxplayer,syplayer,objectpos: string;
		faceplayer: char;
		
//Wall Procedure
										
procedure wall(xres,yres,x,y:integer);

var i,n,t: integer;

Begin	
	for i := 1 to xres do
	begin                                     
		for n := 1 to yres do        
		begin
			gotoxy(x+i,y+n);                          
			write(#178);
		end;
	end;			
End;

//Menu Procedure

procedure menu;

var select: array [1..3] of string; 
		i: integer;
		key: char;
		out: boolean;

Begin

	//Atribuição
	
	path := 1;
	select[path] := #62;
	out := false;
		
	//Menu	
																													
	while(out = false) do
	begin
		
		textcolor(cyan);
		
		// Display
		
		gotoxy(10,5);
		writeln(' ',select[1],' Iniciar ');
		gotoxy(10,7);
		writeln(' ',select[2],' Defenições ');
		gotoxy(10,9);
		writeln(' ',select[3],' Sair ');
		
		key := readkey;
		
		//Lógica
		
		case (key) of              
			'w': path := path-1;
			's': path := path+1;
			#13: Begin out := true; clrscr; end;	
		end;
		
		case (path) of            		
			0: path := 3;
			4: path := 1;
		end;
		
		//Graph Seleção
		
		for i := 1 to 3 do
			begin                                  
				select[i] := #32
			end;
		select[path] := #62;
			                  
	end;
	
End;

//Player Procedure

procedure player;

var outplayer: boolean;
		xplayerdelet,yplayerdelet: integer; 

Begin

	case(faceplayer)of
		'w': yplayerdelet := 1; 
    's': yplayerdelet := -1;
    'a': xplayerdelet := 1;
    'd': xplayerdelet := -1;
  end;
	 
	//Apagar o Player
	
	gotoxy(xplayer+xplayerdelet,yplayer+yplayerdelet);
	write('       ');
	gotoxy(xplayer+xplayerdelet,yplayer+yplayerdelet+1);
  write('       ');
  gotoxy(xplayer+xplayerdelet,yplayer+yplayerdelet+2);
  write('       ');
	
  //Print Player
	
	gotoxy(xplayer,yplayer);
	write(' ',#179,' ',#136,' _');
	gotoxy(xplayer,yplayer+1);
  write(' ',#197,'/O',#206);
  gotoxy(xplayer,yplayer+2);
  write('  / ',#202,' ');
	  
	//Lógica
	
	case(key)of
		'w': begin yplayer := yplayer - ymovspeed; faceplayer := 'w'; end;
		's': begin yplayer := yplayer + ymovspeed; faceplayer := 's'; end;
		'a': begin xplayer := xplayer - xmovspeed; faceplayer := 'a'; end;
		'd': begin xplayer := xplayer + xmovspeed; faceplayer := 'd'; end;
		#27: outplayer := true;		
	end;
	
End;

//Colisões

function collide:boolean;

var overlap: integer;

Begin 

collide := false;

overlap := pos(sxplayer,objectpos);

if(overlap <> 0) then
	begin
		gotoxy(2,3);
		writeln(' A função acha q está a colidir!');
		collide := true
	end;
		
End;


//Game Procedure

procedure game;

var out: boolean;
		
Begin

	//Atribuições Iniciais
	
	out := false;
	ymovspeed := 1;
	xmovspeed := ymovspeed * 2;	
	xplayer := 15;	
  yplayer := 10;
	
	//Frame
	
	wall(50,1,10,5);
	wall(2,50,10,5);
	wall(50,1,10,55);
	wall(2,50,58,5);
	
	//Platforms
	
	wall(35,1,10,30);
	wall(15,1,38,40);
	wall(35,1,10,48);
	
	while(out = false) do
	Begin
  
  //Input
  
  {Testes}

  if (collide = true) then
  	begin
  		gotoxy(2,2);
  		writeln('Collide!');
  	end;	
  
  {Fim do Teste}
  
  player;
  
	key := readkey;
	
	case (key) of
		#27: out := true;
	else
		path := 1;	
	end;
	
	path := 0;	
	end;
End;	


//Main Program

Begin

//Atribuições Iniciais

path := 0;

//Main Loop
	
	repeat
		while(path = 0) do
		begin
			menu;
		end;	
		while(path = 1) do
		begin
			game;
			clrscr;
  	end;
    while(path = 2) do
   	begin
   		path := 0;
   	end;
   	
  until(path = 3);
End.
